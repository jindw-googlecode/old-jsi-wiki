#labels CodeStyle,Phase-Design,JavaScript
=== 基本风格 ===
  * 基本参照Java代码风格。
    # 驼峰式命名（单词无连接字符，单词首字母大写，其余小写）；
    # 类的首字母大写(eg:MyClass)；
    # 变量名，方法名，成员名首字母小写(eg:name,value,targetObject)；
    # 单例对象遵循类的命名方式(eg:GlobalController)；
    # 常量全部大写，下划线分割单词(eg:APPLICATION_ID)；

   参考：http://java.sun.com/docs/codeconv/

  * 变量所用单词尽量不用缩写。
  缩写的单词容易造成语意的不明，不易阅读，而且容易造成争议。

  * 不一味追求灵活简便
  代码总体风格向简单、直接、严谨的方向靠拢。这样的代码，虽然从某些角度上看，不是最简洁，但是更易阅读。注意: 简便 !== 简单


=== 编码约定 ===

  * 目录名以"/"结尾。
  JSI内核中，有一些地方需要记录目录地址。这里我们统一以“/”结尾。

  * 少用属性，不出现常量性质的私有属性。
  属性虽然是面向对象的常用元素，但JavaScript属性的动态性太强，不便自动优化处理。实际编码中应该尽力避免。

  * hack运用必须注释。
  hack的运用必须注释,否则工程将编程地狱

==== 一些诡异的技巧 ====
  * {}就是Map
  哪简单对象当map是个非常方便的地方，缺点是key都被转化成string。但是大多数情况下还是够用的，简单就好，没必要复杂化。

  * 巧用与或。
{{{
if(fn){
  fn();
}
-->
fn&&fn();
}}}




*更多编码规范见:*
[http://code.google.com/p/jsiside/wiki/JSISideCodeStyle]