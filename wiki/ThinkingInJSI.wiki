===脚本元素都有固定的依赖===
这是JSI能够处理的理想情况，当能，这点我们编码过程中，可能会违背，不过，我不认为那是一个好办法。

===脚本是需要明确组织和约束的===
事实上，脚本程序一般不会太复杂，而且脚本程序员很少有协作的习惯和需要，所以他们也都很少有脚本管理的意识。不过，当我们需要开发一个庞大的ui库，或者一些复杂的前端运用。那么，前端脚本管理一定有其存在的价值。

===所有导入的脚本元素，都是完整可用的===
只要你能成功导入，就不会发生依赖没有装载而导致莫明其妙的运行时错误，也就是说，类库的开发者，需要管理好自己的依赖，而类库的使用者不要去关心依赖问题。

===增量开发===
现在有些其他依赖管理方式是统一的全局依赖定义文件。我不认为这是一个好办法。我更喜欢即插即用，而不是每增加一点东西就要拿已有的(并且很可能还是别人编写的)代码开刀。

===无侵入===
上善若水，水利万物而不争。JSI的设计，最大限度的允许程序员延续原有的风格。你的代码还是你原本的代码，不会要求你盖上JSI的标签。我讨厌标题档，讨厌一切华而不实的东西，也讨厌任何我认为没有价值的强加给我的东西，所以，我也不会强加给别人什么东西。

===API中立===
我不知道我能否坚守这点，不过我会尽力去做。我起初想，我不提供任何实用API，JSI只作为一个基础平台，可是事实上这样很难推行。所以，我现在准备开始jsi side，但是我会做到，内核不向任何API提供特别关照。